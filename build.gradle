/*
 * Copyright 2014 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/spinnaker/gradle/" }
    maven { url "https://plugins.gradle.org/m2/" }
    if (spinnakerGradleVersion.endsWith("-SNAPSHOT")) {
      mavenLocal()
    }
  }
  dependencies {
    classpath("com.netflix.spinnaker.gradle:spinnaker-dev-plugin:$spinnakerGradleVersion")
    if (Boolean.valueOf(enablePublishing)) {
      classpath("com.netflix.spinnaker.gradle:spinnaker-dependency-bump-plugin:$spinnakerGradleVersion")
      classpath("com.netflix.spinnaker.gradle:spinnaker-gradle-project:$spinnakerGradleVersion")
    }
    classpath("com.netflix.nebula:nebula-kotlin-plugin:$kotlinVersion")
    classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion")
    classpath("io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.2.2")
  }
}

if (Boolean.valueOf(enablePublishing)) {
  apply plugin: "spinnaker.dependency-bump"
}

allprojects {
  apply plugin: "java-base"
  apply plugin: "spinnaker.base-project"
  if (Boolean.valueOf(enablePublishing)) {
    apply plugin: "spinnaker.project"
  }

  group = "com.netflix.spinnaker.kork"

  repositories {
    jcenter()
  }
}

subprojects {
  afterEvaluate {
    if (name != "kork-bom" && name != "spinnaker-dependencies") {
      dependencies {
        annotationProcessor(platform(project(":spinnaker-dependencies")))
        annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
      }
    }
  }
}
